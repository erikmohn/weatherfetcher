package eu.datex2.wsdl.clientpull._2_0;

import java.net.Authenticator;
import java.net.PasswordAuthentication;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.0.1
 * 2014-09-15T19:38:23.006+02:00
 * Generated source version: 3.0.1
 * 
 */
@WebServiceClient(name = "clientPullService", 
                  wsdlLocation = "classpath:wsdl/Pull.wsdl",
                  targetNamespace = "http://datex2.eu/wsdl/clientPull/2_0") 
public class ClientPullService extends Service {

    public final static URL WSDL_LOCATION;
	private static final String USERNAME = "TjeDatexVindsiden";
	private static final String PASSWORD = "iXA3mY3kfP";

    public final static QName SERVICE = new QName("http://datex2.eu/wsdl/clientPull/2_0", "clientPullService");
    public final static QName ClientPullSoapEndPoint = new QName("http://datex2.eu/wsdl/clientPull/2_0", "clientPullSoapEndPoint");
    static {
        URL url = null;
            url = ClassLoader.getSystemResource("Pull.wsdl");
        WSDL_LOCATION = url;
    }

    public ClientPullService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ClientPullService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ClientPullService() {
        super(WSDL_LOCATION, SERVICE);
     	Authenticator.setDefault(new Authenticator() {
   		 @Override
   		 protected PasswordAuthentication getPasswordAuthentication() {
   		   return new PasswordAuthentication(
   		     USERNAME,
   		     PASSWORD.toCharArray());
   		 }
   		});     
    }
    

    /**
     *
     * @return
     *     returns ClientPullInterface
     */
    @WebEndpoint(name = "clientPullSoapEndPoint")
    public ClientPullInterface getClientPullSoapEndPoint() {
        return super.getPort(ClientPullSoapEndPoint, ClientPullInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ClientPullInterface
     */
    @WebEndpoint(name = "clientPullSoapEndPoint")
    public ClientPullInterface getClientPullSoapEndPoint(WebServiceFeature... features) {
        return super.getPort(ClientPullSoapEndPoint, ClientPullInterface.class, features);
    }

}
